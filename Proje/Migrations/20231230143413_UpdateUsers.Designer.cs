// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proje.Context;

#nullable disable

namespace Proje.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231230143413_UpdateUsers")]
    partial class UpdateUsers
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Proje.Models.AnaBilimDali", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AnaBilimDaliAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AnaBilimDali");
                });

            modelBuilder.Entity("Proje.Models.CalismaZamani", b =>
                {
                    b.Property<int>("CalismaZamaniId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CalismaZamaniId"), 1L, 1);

                    b.Property<TimeSpan>("BaslangicZamani")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("BitisZamani")
                        .HasColumnType("time");

                    b.Property<int>("CalistigiGunler")
                        .HasColumnType("int");

                    b.Property<int>("DoktorId")
                        .HasColumnType("int");

                    b.HasKey("CalismaZamaniId");

                    b.HasIndex("DoktorId");

                    b.ToTable("CalismaZamani");
                });

            modelBuilder.Entity("Proje.Models.Doctors", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AnaBilimDaliId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PoliklinikId")
                        .HasColumnType("int");

                    b.Property<int>("PolikliniklerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnaBilimDaliId");

                    b.HasIndex("PolikliniklerId");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("Proje.Models.Poliklinikler", b =>
                {
                    b.Property<int>("PolikliniklerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PolikliniklerId"), 1L, 1);

                    b.Property<int>("AnaBilimDaliId")
                        .HasColumnType("int");

                    b.Property<string>("PoliklinikAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PolikliniklerId");

                    b.HasIndex("AnaBilimDaliId");

                    b.ToTable("Poliklinikler");
                });

            modelBuilder.Entity("Proje.Models.Randevu", b =>
                {
                    b.Property<int>("RandevuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RandevuId"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<int>("DoctorsId")
                        .HasColumnType("int");

                    b.Property<int>("PoliklinikId")
                        .HasColumnType("int");

                    b.Property<int>("PolikliniklerId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("RandevuId");

                    b.HasIndex("DoctorsId");

                    b.HasIndex("PolikliniklerId");

                    b.HasIndex("UserId");

                    b.ToTable("Randevu");
                });

            modelBuilder.Entity("Proje.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TcNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Proje.Models.CalismaZamani", b =>
                {
                    b.HasOne("Proje.Models.Doctors", "Doctors")
                        .WithMany("CalismaZamani")
                        .HasForeignKey("DoktorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctors");
                });

            modelBuilder.Entity("Proje.Models.Doctors", b =>
                {
                    b.HasOne("Proje.Models.AnaBilimDali", "AnaBilimDali")
                        .WithMany()
                        .HasForeignKey("AnaBilimDaliId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proje.Models.Poliklinikler", "Poliklinikler")
                        .WithMany()
                        .HasForeignKey("PolikliniklerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnaBilimDali");

                    b.Navigation("Poliklinikler");
                });

            modelBuilder.Entity("Proje.Models.Poliklinikler", b =>
                {
                    b.HasOne("Proje.Models.AnaBilimDali", "AnaBilimDali")
                        .WithMany()
                        .HasForeignKey("AnaBilimDaliId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnaBilimDali");
                });

            modelBuilder.Entity("Proje.Models.Randevu", b =>
                {
                    b.HasOne("Proje.Models.Doctors", "Doctors")
                        .WithMany("Randevus")
                        .HasForeignKey("DoctorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proje.Models.Poliklinikler", "Poliklinikler")
                        .WithMany()
                        .HasForeignKey("PolikliniklerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proje.Models.User", "User")
                        .WithMany("Randevus")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctors");

                    b.Navigation("Poliklinikler");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Proje.Models.Doctors", b =>
                {
                    b.Navigation("CalismaZamani");

                    b.Navigation("Randevus");
                });

            modelBuilder.Entity("Proje.Models.User", b =>
                {
                    b.Navigation("Randevus");
                });
#pragma warning restore 612, 618
        }
    }
}
